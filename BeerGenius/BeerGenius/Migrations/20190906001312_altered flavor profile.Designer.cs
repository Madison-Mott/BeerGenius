// <auto-generated />
using BeerGenius.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerGenius.Migrations
{
    [DbContext(typeof(BeerGeniusDbContext))]
    [Migration("20190906001312_altered flavor profile")]
    partial class alteredflavorprofile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeerGenius.Models.BeerGeniusUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("BeerGeniusUsers");
                });

            modelBuilder.Entity("BeerGenius.Models.FlavorProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ABV");

                    b.Property<int>("Color");

                    b.Property<int>("Crisp");

                    b.Property<int>("Fruity");

                    b.Property<int>("Hop");

                    b.Property<int>("Malt");

                    b.Property<int>("Roasty");

                    b.Property<int>("Sour");

                    b.Property<int>("Sweetness");

                    b.HasKey("Id");

                    b.ToTable("FlavorProfiles");

                    b.HasData(
                        new
                        {
                            Id = 66,
                            ABV = 2,
                            Color = 1,
                            Crisp = 3,
                            Fruity = 3,
                            Hop = 1,
                            Malt = 1,
                            Roasty = 1,
                            Sour = 2,
                            Sweetness = 2
                        },
                        new
                        {
                            Id = 43,
                            ABV = 3,
                            Color = 3,
                            Crisp = 1,
                            Fruity = 1,
                            Hop = 2,
                            Malt = 3,
                            Roasty = 3,
                            Sour = 1,
                            Sweetness = 2
                        },
                        new
                        {
                            Id = 75,
                            ABV = 1,
                            Color = 1,
                            Crisp = 3,
                            Fruity = 1,
                            Hop = 2,
                            Malt = 1,
                            Roasty = 1,
                            Sour = 1,
                            Sweetness = 1
                        },
                        new
                        {
                            Id = 60,
                            ABV = 3,
                            Color = 1,
                            Crisp = 1,
                            Fruity = 3,
                            Hop = 1,
                            Malt = 3,
                            Roasty = 2,
                            Sour = 1,
                            Sweetness = 3
                        });
                });

            modelBuilder.Entity("BeerGenius.Models.UserFlavorProfile", b =>
                {
                    b.Property<int>("UserFlavorProfileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ABV");

                    b.Property<int>("Color");

                    b.Property<int>("Crisp");

                    b.Property<int>("Fruity");

                    b.Property<int>("Hop");

                    b.Property<int>("Malt");

                    b.Property<int>("Roasty");

                    b.Property<int>("Sour");

                    b.Property<int>("Sweetness");

                    b.Property<int>("UserId");

                    b.HasKey("UserFlavorProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFlavorProfiles");
                });

            modelBuilder.Entity("BeerGenius.Models.UserFlavorProfile", b =>
                {
                    b.HasOne("BeerGenius.Models.BeerGeniusUser", "BeerGeniusUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
